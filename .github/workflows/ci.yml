name: CI - Build and Test

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build all services (skip genai-service)
        run: |
          for service in backend/services/*/pom.xml; do
            service_dir=$(dirname "$service")
            service_name=$(basename "$service_dir")
            
            if [ "$service_name" = "genai-service" ]; then
              echo "Skipping $service_name"
              continue
            fi

            echo "Building $service_dir"
            cd "$service_dir"
            mvn clean package -DskipTests
            cp target/*.jar target/app.jar
            cd ../../..
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          for service_dir in backend/services/*; do
            if [ -d "$service_dir" ]; then
              service_name=$(basename "$service_dir")
              DOCKER_IMAGE="${{ secrets.DOCKER_USERNAME }}/$service_name"
              VERSION_TAG="v${{ github.run_number }}"
              
              echo "Building and pushing Docker image for $service_name"
              cd "$service_dir"
              
              # Build image
              docker build -t $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:$VERSION_TAG .
              
              # Push to Docker Hub
              docker push $DOCKER_IMAGE:latest
              docker push $DOCKER_IMAGE:$VERSION_TAG
              
              echo "Images pushed to Docker Hub:"
              echo "- $DOCKER_IMAGE:latest"
              echo "- $DOCKER_IMAGE:$VERSION_TAG"
              
              cd ../../..
            fi
          done
