services:
  postgres:
    container_name: mindigo_db
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: mindigo
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: Mindigo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindigo -d Mindigo"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:latest
    container_name: mindigo-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mindigo
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - mongo_data:/data/db
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s

  mongo-express:
    image: mongo-express:latest
    container_name: local-mongo-express
    ports:
      - "9090:8081"
    networks:
      - microservices-net
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mindigo
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_BASICAUTH_USERNAME: mindigo
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped

  config-server:
    image: somikdasgupta/config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-net
    environment:
      - CONFIG_SERVER_PORT=8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  signaling-server:
    image: somikdasgupta/signaling-server:latest
    container_name: signaling-server
    ports:
      - "3001:3001"
    networks:
      - microservices-net
    environment:
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - SIGNALING_SERVER_PORT=3001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3001/health" ]
      interval: 20s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  eureka-server:
    image: somikdasgupta/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_HOSTNAME=eureka-server
      - EUREKA_SERVER_PORT=8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth-service:
    image: somikdasgupta/auth-service:latest
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - EUREKA_HOSTNAME=auth-service
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - AUTH_SERVICE_PORT=8081
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - APP_COOKIE_SECURE=true
      - APP_COOKIE_SAME_SITE=strict
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  appointment-service:
    image: somikdasgupta/appointment-service:latest
    container_name: appointment-service
    ports:
      - "8092:8092"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - EUREKA_HOSTNAME=appointment-service
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APPOINTMENT_SERVICE_PORT=8092
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  content-service:
    image: somikdasgupta/content-service:latest
    container_name: content-service
    ports:
      - "8086:8086"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - EUREKA_HOSTNAME=content-service
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONTENT_SERVICE_PORT=8086
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  file-server:
    image: somikdasgupta/file-server:latest
    container_name: file-server
    ports:
      - "8085:8085"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - EUREKA_HOSTNAME=file-server
      - FILE_SERVER_PORT=8085
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_BUCKET=${SUPABASE_BUCKET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  meeting-service:
    image: somikdasgupta/meeting-service:latest
    container_name: meeting-service
    ports:
      - "8091:8091"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - EUREKA_HOSTNAME=meeting-service
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MEETING_SERVICE_PORT=8091
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  discussion-service:
    image: somikdasgupta/discussion-service:latest
    container_name: discussion-service
    ports:
      - "8093:8093"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - EUREKA_HOSTNAME=discussion-service
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DISCUSSION_SERVICE_PORT=8093
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  genai-service:
    image: somikdasgupta/genai-service:latest
    container_name: genai-service
    ports:
      - "8100:8100"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GENAI_SERVICE_PORT=8100
      - APP_NAME=genai-service
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka
      - EUREKA_HOSTNAME=genai-service
      - EUREKA_SERVER_PORT=8761
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - MONGO_URI=mongodb://mindigo:1234@mongo:27017/
      - HEALTH_CHECK_INTERVAL=30
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=Mindigo
      - DB_USERNAME=mindigo
      - DB_PASSWORD=1234
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_BASE_URL=https://api.elevenlabs.io
      - ELEVENLABS_MODEL_ID=eleven_multilingual_v2
      - ELEVENLABS_VOICE_FILENAME=voices.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8100/api/v1/genai/test" ]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  gateway-server:
    image: somikdasgupta/gateway-server:latest
    container_name: gateway-server
    ports:
      - "8080:8080"
    networks:
      - microservices-net
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      file-server:
        condition: service_healthy
      content-service:
        condition: service_healthy
      appointment-service:
        condition: service_healthy
      meeting-service:
        condition: service_healthy
      discussion-service:
        condition: service_healthy
      genai-service:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - EUREKA_HOSTNAME=gateway-server
      - GATEWAY_SERVER_PORT=8080
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  mindigo:
    image: somikdasgupta/mindigo:latest
    container_name: mindigo
    ports:
      - "3000:3000"
    networks:
      - microservices-net
    depends_on:
      gateway-server:
        condition: service_healthy
      signaling-server:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - SIGNALING_SERVER_URL=${SIGNALING_SERVER_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
