services:
  postgres:
    container_name: mindigo_db
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: mindigo
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: Mindigo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    restart: unless-stopped
  mongo:
    image: mongo:latest
    container_name: mindigo-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mindigo
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: local-mongo-express
    restart: always
    ports:
      - "9090:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mindigo
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_BASICAUTH_USERNAME: mindigo
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
    depends_on:
      - mongo

  config-server:
    build: ./services/config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-net
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  eureka-server:
    build: ./services/eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_HOSTNAME=eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_PORT=5432
      - EUREKA_HOSTNAME=auth-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  mail-service:
    build: ./services/mail-service
    container_name: mail-service
    ports:
      - "8083:8083"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - EUREKA_HOSTNAME=mail-service
    env_file:
      - ./services/mail-service/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  file-server:
    build: ./services/file-server
    container_name: file-server
    ports:
      - "8085:8085"
    networks:
      - microservices-net
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - EUREKA_HOSTNAME=file-server
    env_file:
      - ./services/file-server/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  gateway-server:
    build: ./services/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    networks:
      - microservices-net
    depends_on:
      auth-service:
        condition: service_healthy
      mail-service:
        condition: service_healthy
      file-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy

    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - EUREKA_HOSTNAME=gateway-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data:
  mongo_data: